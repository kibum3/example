<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.mapper.MemberMapper">
	<!-- 사용자 정의 resultMap 요소 정의 -->
	<resultMap type="Member" id="memberMap">
		<result property = "userNo" column="user_no"/>
		<result property = "userId" column="user_id"/>
		<result property = "userPw" column="user_pw"/>
		<result property = "userName" column="user_name"/>
		<result property = "job" column="job"/>
		<result property = "coin" column="coin"/>
		<result property = "enabled" column="enabled"/>
		<result property = "regDate" column="reg_date"/>
		<result property = "updDate" column="upd_date"/>
		<collection property = "authList" resultMap="authMap">
		</collection>
	</resultMap>
	
	<!-- 등록 처리 -->
	<insert id="create">
		insert into member
		(
		user_no,
		user_id,
		user_pw,
		user_name,
		job
		)
		values
		(
		member_seq.nextval,
		#{userId},
		#{userPw},
		#{userName},
		#{job}
		)
	</insert>
	<!-- 권한 생성 -->
	<insert id="createAuth">
		insert into member_auth
		(
		user_no,
		auth
		)
		values
		(
		member_seq.currval,
		#{auth}
		)
	</insert>
	<!-- 목록 조회 -->
	<select id="list" resultType="Member">
		select user_no,
		user_id,
		user_pw,
		user_name,
		(select code_name from code_detail where group_code = 'A00'
		and code_value = job) as job,
		coin,
		reg_date
		from member
		order by reg_date
		desc
	</select>
	<!-- 상세 조회 -->
	<select id="read" resultMap="memberMap">
		select mem.user_no,
		mem.user_id,
		user_pw,
		user_name,
		job,
		coin,
		reg_date,
		upd_date,
		auth
		from member mem left
		outer join member_auth auth on mem.user_no = auth.user_no
		where
		mem.user_no = #{userNo}
	</select>
</mapper>